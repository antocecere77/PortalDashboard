spring.application.name=spring-boot-admin-server

#server.port=8443
server.port=8080

spring.security.user.name=admin
spring.security.user.password=admin

#security.require-ssl=true

# The format used for the keystore. It could be set to JKS in case it is a JKS file
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore/antonio.p12
# The password used to generate the certificate
#server.ssl.key-store-password=12345678
# The alias mapped to the certificate
#server.ssl.key-alias=antonio

server.use-forward-headers=true
#spring.boot.admin.ui.public-url=https://LAPTOP-48HU69GE:8443
spring.boot.admin.ui.public-url=http://localhost:8080

#configs to connect to self register the admin server as a client
#spring.boot.admin.client.url=https://LAPTOP-48HU69GE:8443
spring.boot.admin.client.url=http://localhost:8080
spring.boot.admin.client.username=${spring.security.user.name}
spring.boot.admin.client.password=${spring.security.user.password}

#configs to give secured server info
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#mail notifications
#spring.mail.host=smtp.gmail.com
#spring.mail.username=test@gmail.com
#spring.mail.password=test
#spring.mail.port=587
#spring.mail.properties.mail.smtp.auth=
#spring.mail.properties.mail.smtp.starttls.enable=

#spring.boot.admin.notify.mail.to=test@gmail.com

#hipchat notifications
#spring.boot.admin.notify.hipchat.auth-token=<generated_token>
#spring.boot.admin.notify.hipchat.room-id=<room-id>
#spring.boot.admin.notify.hipchat.url=https://youcompany.hipchat.com/v2/